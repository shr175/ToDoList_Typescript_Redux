{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nconst initialState = {\n  tasks: []\n}; // const ActionTypes: { Submit_Task: string, Delete_Task: string } {\n//   Submit_Task = \"Submit Task\",\n//   Delete_Task = \"Delete Task\",\n// }\n// const action\n\nvar ActionTypes; // const submitTask = (submit:submit_Task)=> ({\n// \ttype: ActionTypes.Submit_Task,\n// \tpayload: { submit },\n// });\n\n(function (ActionTypes) {\n  ActionTypes[\"Submit_Task\"] = \"Submit Task\";\n  ActionTypes[\"Delete_Task\"] = \"Delete Task\";\n})(ActionTypes || (ActionTypes = {}));\n\nconst deleteTask = deleteTask => ({\n  type: ActionTypes.Delete_Task,\n  payload: {\n    deleteTask\n  }\n});\n\nconst addToTaskReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(\"before entering switch case\", action, state);\n\n  switch (action.type) {\n    case \"submit_task\":\n      {\n        console.log(\"entered in switch case submit task\");\n        return {\n          tasks: [...state.tasks, action.payload]\n        };\n      }\n\n    case \"delete_task\":\n      {\n        const updatedTasks = [];\n        console.log(\"entered switch case delete task before if condition\");\n        state.tasks.forEach(task => {\n          if (task.id !== action.payload.id) {\n            updatedTasks.push(task);\n          }\n        });\n        console.log(\"entered in switch case delete task after if condition\");\n        return {\n          tasks: updatedTasks\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst store = configureStore({\n  reducer: addToTaskReducer\n});\nexport default store;","map":{"version":3,"names":["configureStore","initialState","tasks","ActionTypes","deleteTask","type","Delete_Task","payload","addToTaskReducer","state","action","console","log","updatedTasks","forEach","task","id","push","store","reducer"],"sources":["/Users/shreyanayak/Desktop/All React App/shreya/ToDoList_Typescript_Redux/src/store/stores.tsx"],"sourcesContent":["\nimport { configureStore } from \"@reduxjs/toolkit\";\n\ninterface tasksType {\n  id: number;\n}\n\ninterface stateInterface {\n  tasks: Array<tasksType>;\n}\n\nconst initialState: stateInterface = {\n  tasks: [],\n};\n\n// const ActionTypes: { Submit_Task: string, Delete_Task: string } {\n//   Submit_Task = \"Submit Task\",\n//   Delete_Task = \"Delete Task\",\n// }\n// const action\n\nenum ActionTypes {\n  Submit_Task = \"Submit Task\",\n  Delete_Task = \"Delete Task\",\n}\n\n// const submitTask = (submit:submit_Task)=> ({\n// \ttype: ActionTypes.Submit_Task,\n// \tpayload: { submit },\n// });\n\ninterface DeleteTask {\n  type : string,\n  id : number,\n\n}\n\n const deleteTask = (deleteTask:DeleteTask) => ({\n\ttype: ActionTypes.Delete_Task,\n\tpayload: {deleteTask},\n});\n\ninterface submit_Task {\n type : string,\n} \n\nconst addToTaskReducer = (state = initialState, action: any) : stateInterface=> {\n  console.log(\"before entering switch case\", action, state);\n  switch (action.type) {\n    case \"submit_task\": {\n      console.log(\"entered in switch case submit task\");\n      return { tasks: [...state.tasks, action.payload] };\n    }\n\n    case \"delete_task\": {\n      const updatedTasks = [] as Array<tasksType>;\n      console.log(\"entered switch case delete task before if condition\")\n      state.tasks.forEach((task: tasksType) => {\n        if (task.id !== action.payload.id) {\n          updatedTasks.push(task);\n        }\n      });\n      console.log(\"entered in switch case delete task after if condition\")\n      return { tasks: updatedTasks };\n    }\n\n   \n    default:\n      return state;\n  }\n};\n\nconst store = configureStore({\n  reducer:  addToTaskReducer,\n  \n});\n\nexport default store;"],"mappings":"AACA,SAASA,cAAT,QAA+B,kBAA/B;AAUA,MAAMC,YAA4B,GAAG;EACnCC,KAAK,EAAE;AAD4B,CAArC,C,CAIA;AACA;AACA;AACA;AACA;;IAEKC,W,EAKL;AACA;AACA;AACA;;WARKA,W;EAAAA,W;EAAAA,W;GAAAA,W,KAAAA,W;;AAgBJ,MAAMC,UAAU,GAAIA,UAAD,KAA4B;EAC/CC,IAAI,EAAEF,WAAW,CAACG,WAD6B;EAE/CC,OAAO,EAAE;IAACH;EAAD;AAFsC,CAA5B,CAAnB;;AASD,MAAMI,gBAAgB,GAAG,YAAuD;EAAA,IAAtDC,KAAsD,uEAA9CR,YAA8C;EAAA,IAAhCS,MAAgC;EAC9EC,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CF,MAA3C,EAAmDD,KAAnD;;EACA,QAAQC,MAAM,CAACL,IAAf;IACE,KAAK,aAAL;MAAoB;QAClBM,OAAO,CAACC,GAAR,CAAY,oCAAZ;QACA,OAAO;UAAEV,KAAK,EAAE,CAAC,GAAGO,KAAK,CAACP,KAAV,EAAiBQ,MAAM,CAACH,OAAxB;QAAT,CAAP;MACD;;IAED,KAAK,aAAL;MAAoB;QAClB,MAAMM,YAAY,GAAG,EAArB;QACAF,OAAO,CAACC,GAAR,CAAY,qDAAZ;QACAH,KAAK,CAACP,KAAN,CAAYY,OAAZ,CAAqBC,IAAD,IAAqB;UACvC,IAAIA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACH,OAAP,CAAeS,EAA/B,EAAmC;YACjCH,YAAY,CAACI,IAAb,CAAkBF,IAAlB;UACD;QACF,CAJD;QAKAJ,OAAO,CAACC,GAAR,CAAY,uDAAZ;QACA,OAAO;UAAEV,KAAK,EAAEW;QAAT,CAAP;MACD;;IAGD;MACE,OAAOJ,KAAP;EApBJ;AAsBD,CAxBD;;AA0BA,MAAMS,KAAK,GAAGlB,cAAc,CAAC;EAC3BmB,OAAO,EAAGX;AADiB,CAAD,CAA5B;AAKA,eAAeU,KAAf"},"metadata":{},"sourceType":"module"}